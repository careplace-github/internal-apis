name: '[PRODUCTION] Continuous Integration (CI)'

on:
  push:
    branches: ['Main']

jobs:
  dependencies:
    name: Dependency Management
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Branch name
        run: echo running on branch '${GITHUB_REF##*/}'
      - name: Install dependencies
        run: yarn install
      - name: Dependency Management
        run: yarn depcheck

  lint:
    name: Lint
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Branch name
        run: echo running on branch '${GITHUB_REF##*/}'
      - name: Install dependencies
        run: yarn install
      - name: Format
        run: yarn prettier-check
      - name: Lint
        run: yarn lint

  build:
    name: Build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Branch name
        run: echo running on branch '${GITHUB_REF##*/}'
      - name: Build the Docker image
        run: docker build . --file .docker/api/Dockerfile.build.prod --tag careplace-rest-api-build-${GITHUB_REF##*/}:$(date +%s)

  test:
    name: Test
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

  security:
    name: Security
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Branch name
        run: echo running on branch '${GITHUB_REF##*/}'
      - name: Install dependencies
        run: yarn install
      - name: Snyk Auth
        run: npx snyk auth ${{ secrets.SNYK_API_TOKEN }}
      - name: Snyk Policy
        run: npx snyk policy
      - name: Snyk Test
        run: npx snyk test --severity-threshold=high
      - name: Build the Docker image
        run: docker build . --file .docker/api/Dockerfile.prod --tag careplace/internal-apis:dev
      - name: Snyk Test Docker Image
        run: npx snyk container test careplace/internal-apis:dev --file=.docker/api/Dockerfile.prod --severity-threshold=high

  release:
    name: Tag & Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Configure git
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "admin@careplace.pt"

      - name: Generate changelog and version
        run: npx standard-version

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch:  Main

      - name: Get latest tag
        id: get_latest_tag
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"

      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.get_latest_tag.outputs.tag }}
          name: Release ${{ steps.get_latest_tag.outputs.tag }}
          bodyFile: CHANGELOG.md
          draft: false
          prerelease: true