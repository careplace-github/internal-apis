{
  "root": true,
  "env": {
    "es2021": true
  },
  "plugins": [
    "@typescript-eslint",
    "prettier"
  ],
  "extends": [
    "airbnb-base",
    "prettier",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2021,
    "sourceType": "module",
    "project": "./tsconfig.json",
    "warnOnUnsupportedTypeScriptVersion": false
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      },
      "node": {
        "extensions": [
          ".js",
          ".ts"
        ],
        "moduleDirectory": [
          "node_modules",
          "src/"
        ]
      }
    }
  },
  /**
    * 0 = off
    * 1 = warn
    * 2 = error
    */
  "rules": {
    "prettier/prettier": 1, // prettier
    "prefer-const": 1, // prefer const
    "spaced-comment": 1, // spaced comment
    "import/order": 1, // import module

    "@typescript-eslint/no-non-null-asserted-optional-chain": 1, // no ! operator
    "dot-notation": 1, // dot notation
    "@typescript-eslint/no-non-null-assertion": 1, // no ! operator
    "eqeqeq": 1, // === instead of ==
    "lines-between-class-members": 1, // lines between class members
    "array-callback-return": 1, // array callback return
    "no-case-declarations": 1, // no case declarations
    "import/no-unresolved": 1, // import module
    "prefer-regex-literals": 1, // regex
    "no-fallthrough": 1, // no fallthrough
    "import/no-named-as-default-member": 1, // import module
    "import/no-named-as-default": 1, // import module
    "import/extensions": 1, // import module
    "arrow-body-style": 1, // use arrow function instead of function
    "no-alert": 1, // no alert function 
    "@typescript-eslint/ban-types": 1, // ban type
    "camelcase": 1, // camelcase in variable
    "no-console": 1, // no console.log
    "no-unused-vars": 1, // no unused variable
    "no-nested-ternary": 1, // no nested ternary
    "global-require": 1, // global require
    "@typescript-eslint/no-var-requires": 1, // no require in typescript
    "no-param-reassign": 1, // no reassign param function 
    "import/no-named-default": 1, // import module
    "no-underscore-dangle": 1, // no underscore in variable
    "no-restricted-syntax": 1, // no restricted syntax
    "@typescript-eslint/no-explicit-any": 1, // no any type
    "no-restricted-globals": 1, // no restricted globals
    "no-prototype-builtins": 1, // no prototype builtins
    "no-unsafe-optional-chaining": 1, // no unsafe optional chaining
    "vars-on-top": 1, // var on top

    "no-var": 1, // no var
    "block-scoped-var": 1, // block scoped var
    "radix": 1, // radix
    "no-useless-catch": 1, // no useless catch
    "default-case": 1, // default case in switch
    "no-await-in-loop": 1, // no await in loop
    "no-plusplus": 1, // no ++ operator
    "no-restricted-exports": 1, // no export module 
    "import/no-cycle": 1, // import module
    "default-param-last": 1, // default param in last
    "class-methods-use-this": 1, // class method use this
    "import/prefer-default-export": 1, // import module
    "@typescript-eslint/naming-convention": 1, // naming convention in typescript 
    "@typescript-eslint/no-use-before-define": 1, // no use before define
    "prefer-destructuring": [
      1,
      {
        "object": true,
        "array": false
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      1,
      {
        "args": "none"
      }
    ],
    // Additional rules for REST API development
    "consistent-return": 1, // consistent return in function 
    "no-shadow": 1, // no shadow variable
    "no-throw-literal": 1, // no throw literal
    "prefer-arrow-callback": 1 // use arrow function instead of function
  }
}